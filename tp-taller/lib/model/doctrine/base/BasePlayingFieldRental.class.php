<?php

/**
 * BasePlayingFieldRental
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $address
 * @property string $city
 * @property string $province
 * @property string $country
 * @property string $phoneNo
 * @property Doctrine_Collection $Disciplines
 * @property Doctrine_Collection $HeldMatches
 * @property Doctrine_Collection $RentalDisciplines
 * 
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getAddress()           Returns the current record's "address" value
 * @method string              getCity()              Returns the current record's "city" value
 * @method string              getProvince()          Returns the current record's "province" value
 * @method string              getCountry()           Returns the current record's "country" value
 * @method string              getPhoneNo()           Returns the current record's "phoneNo" value
 * @method Doctrine_Collection getDisciplines()       Returns the current record's "Disciplines" collection
 * @method Doctrine_Collection getHeldMatches()       Returns the current record's "HeldMatches" collection
 * @method Doctrine_Collection getRentalDisciplines() Returns the current record's "RentalDisciplines" collection
 * @method PlayingFieldRental  setName()              Sets the current record's "name" value
 * @method PlayingFieldRental  setAddress()           Sets the current record's "address" value
 * @method PlayingFieldRental  setCity()              Sets the current record's "city" value
 * @method PlayingFieldRental  setProvince()          Sets the current record's "province" value
 * @method PlayingFieldRental  setCountry()           Sets the current record's "country" value
 * @method PlayingFieldRental  setPhoneNo()           Sets the current record's "phoneNo" value
 * @method PlayingFieldRental  setDisciplines()       Sets the current record's "Disciplines" collection
 * @method PlayingFieldRental  setHeldMatches()       Sets the current record's "HeldMatches" collection
 * @method PlayingFieldRental  setRentalDisciplines() Sets the current record's "RentalDisciplines" collection
 * 
 * @package    tp-taller
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlayingFieldRental extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('playing_field_rental');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('province', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phoneNo', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Discipline as Disciplines', array(
             'refClass' => 'RentalDiscipline',
             'local' => 'rental_id',
             'foreign' => 'discipline_id'));

        $this->hasMany('Match as HeldMatches', array(
             'local' => 'id',
             'foreign' => 'rental_id'));

        $this->hasMany('RentalDiscipline as RentalDisciplines', array(
             'local' => 'id',
             'foreign' => 'rental_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}