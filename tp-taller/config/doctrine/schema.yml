Match:
  tableName:  match_table
  actAs:  { Timestampable: ~ }
  columns:
    starting_time:  { type: timestamp }
    closed:			{ type: boolean, notnull: true, default: 0 }
    played:         { type: boolean, notnull: true, default: 0 }
    public:			{ type: boolean, notnull: true, default: 1 }
    discipline_id:  { type: integer(5), notnull: true }
    owner_id:       { type: integer(5) }
    rental_id:      { type: integer(5) }
    local_id:       { type: integer(5) }
    away_id:        { type: integer(5) }
  relations:
    Discipline:
      foreignAlias: Matches
      local:        discipline_id
      foreign:      id
      type:         one
      foreignType:  many
    Owner:
      class:        sfGuardUserProfile
      foreignAlias: OwnedMatches
      local:        owner_id
      foreign:      id
      type:         one
      foreignType:  many
    Court:
      class:        PlayingFieldRental
      foreignAlias: HeldMatches
      local:        rental_id
      foreign:      id
      type:         one
      foreignType:  many
    LocalTeam:
      class:        Team
      foreignAlias: HeldMatches
      local:        local_id
      foreign:      id
      type:         one
      foreignType:  many
    AwayTeam:
      class:        Team
      foreignAlias: HeldMatches
      local:        away_id
      foreign:      id
      type:         one
      foreignType:  many

Team:
  actAs:  { Timestampable: ~ }
  columns:
    name:           { type: string(255) }
    discipline_id:  { type: integer(5), notnull: true }
  relations:
    Players:
      class:        sfGuardUserProfile
      foreignAlias: Teams
      refClass:     TeamPlayer
      local:        team_id
      foreign:      player_id
    Discipline:
      foreignAlias: Teams
      local:        discipline_id
      foreign:      id
      type:         one
      foreignType:  many

TeamPlayer:
  actAs:  { Timestampable: ~ }
  columns:
    team_id:   { type: integer(5), notnull: true, primary: true }
    player_id:  { type: integer(5), notnull: true, primary: true }
  relations:
    Team:
      local:        team_id
      foreign:      id
      foreignAlias: TeamPlayers
    Player:
      class:        sfGuardUserProfile
      local:        player_id
      foreign:      id
      foreignAlias: TeamPlayers

Discipline:
  actAs:  { Timestampable: ~ }
  columns:
    name: { type: string(255), notnull: true }
  relations:
    Rentals:
      class:        PlayingFieldRental
      foreignAlias: Disciplines
      refClass:     RentalDiscipline
      local:        discipline_id
      foreign:      rental_id

PlayingFieldRental:
  actAs:  { Timestampable: ~ }
  columns:
    name:       { type: string(255), notnull: true }
    address:    { type: string(255) }
    city:       { type: string(255) }
    province:   { type: string(255) }
    country:    { type: string(255) }
    phoneNo:	{ type: string(40) }
  relations:
    Disciplines:
      class:        Discipline
      foreignAlias: Rentals
      refClass:     RentalDiscipline
      local:        rental_id
      foreign:      discipline_id

RentalDiscipline:
  actAs:  { Timestampable: ~ }
  columns:
    rental_id:      { type: integer(5), notnull: true, primary: true }
    discipline_id:  { type: integer(5), notnull: true, primary: true }
  relations:
    PlayingFieldRental:
      local:        rental_id
      foreign:      id
      foreignAlias: RentalDisciplines
    Discipline:
      local:        discipline_id
      foreign:      id
      foreignAlias: RentalDisciplines

sfGuardUserProfile:
  tableName:          sf_guard_user_profile
  columns:
    user_id:          { type: integer(5), notnull: true }
    nickname:         { type: varchar(32) }
    first_name:       { type: string(30) }
    last_name:        { type: string(30) }
    birthday:         { type: date }
    facebook_uid:     { type: string(20) }
    email:            { type: string(255) }
    email_hash:       { type: string(255) }
  indexes:
    facebook_uid_index:
      fields: [facebook_uid]
      unique: true
    email_index:
      fields: [email]
      unique: true
    # email_hash_index:
      # fields: [email_hash]
      # unique: true
  relations:
    sfGuardUser:
      type:         one
      foreignType:  one
      class:        sfGuardUser
      local:        user_id
      foreign:      id
      onDelete:     cascade
      foreignAlias: Profile