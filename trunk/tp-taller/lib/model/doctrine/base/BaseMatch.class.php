<?php

/**
 * BaseMatch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $starting_time
 * @property boolean $closed
 * @property boolean $played
 * @property boolean $public
 * @property integer $discipline_id
 * @property integer $owner_id
 * @property integer $playing_field_id
 * @property integer $local_id
 * @property integer $away_id
 * @property Discipline $Discipline
 * @property sfGuardUserProfile $Owner
 * @property PlayingField $Court
 * @property Team $LocalTeam
 * @property Team $AwayTeam
 * 
 * @method timestamp          getStartingTime()     Returns the current record's "starting_time" value
 * @method boolean            getClosed()           Returns the current record's "closed" value
 * @method boolean            getPlayed()           Returns the current record's "played" value
 * @method boolean            getPublic()           Returns the current record's "public" value
 * @method integer            getDisciplineId()     Returns the current record's "discipline_id" value
 * @method integer            getOwnerId()          Returns the current record's "owner_id" value
 * @method integer            getPlayingFieldId()   Returns the current record's "playing_field_id" value
 * @method integer            getLocalId()          Returns the current record's "local_id" value
 * @method integer            getAwayId()           Returns the current record's "away_id" value
 * @method Discipline         getDiscipline()       Returns the current record's "Discipline" value
 * @method sfGuardUserProfile getOwner()            Returns the current record's "Owner" value
 * @method PlayingField       getCourt()            Returns the current record's "Court" value
 * @method Team               getLocalTeam()        Returns the current record's "LocalTeam" value
 * @method Team               getAwayTeam()         Returns the current record's "AwayTeam" value
 * @method Match              setStartingTime()     Sets the current record's "starting_time" value
 * @method Match              setClosed()           Sets the current record's "closed" value
 * @method Match              setPlayed()           Sets the current record's "played" value
 * @method Match              setPublic()           Sets the current record's "public" value
 * @method Match              setDisciplineId()     Sets the current record's "discipline_id" value
 * @method Match              setOwnerId()          Sets the current record's "owner_id" value
 * @method Match              setPlayingFieldId()   Sets the current record's "playing_field_id" value
 * @method Match              setLocalId()          Sets the current record's "local_id" value
 * @method Match              setAwayId()           Sets the current record's "away_id" value
 * @method Match              setDiscipline()       Sets the current record's "Discipline" value
 * @method Match              setOwner()            Sets the current record's "Owner" value
 * @method Match              setCourt()            Sets the current record's "Court" value
 * @method Match              setLocalTeam()        Sets the current record's "LocalTeam" value
 * @method Match              setAwayTeam()         Sets the current record's "AwayTeam" value
 * 
 * @package    tp-taller
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMatch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('match_table');
        $this->hasColumn('starting_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('closed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('played', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('discipline_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('owner_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
        $this->hasColumn('playing_field_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
        $this->hasColumn('local_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
        $this->hasColumn('away_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Discipline', array(
             'local' => 'discipline_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUserProfile as Owner', array(
             'local' => 'owner_id',
             'foreign' => 'id'));

        $this->hasOne('PlayingField as Court', array(
             'local' => 'playing_field_id',
             'foreign' => 'id'));

        $this->hasOne('Team as LocalTeam', array(
             'local' => 'local_id',
             'foreign' => 'id'));

        $this->hasOne('Team as AwayTeam', array(
             'local' => 'away_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}